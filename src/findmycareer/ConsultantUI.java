
package findmycareer;

/*import dbfiles.Appointment;
import dbfiles.Consultant;
import dbfiles.FMCdb; */
import javax.swing.*;
import java.util.*;
import java.sql.*;
import javax.swing.table.DefaultTableModel;


/**
* @author Kaspars Galimovs
 * @StudentNO: 3106161816
 * @version 0.1
 * @Date 15/06/2017
 * @Bugs None
 */
public class ConsultantUI extends javax.swing.JFrame {
    private JFrame login_screen;
    //Creates new form ConsultantUI
     
    public ConsultantUI() {
        initComponents();
    }
    public ConsultantUI(JFrame ls) {
        initComponents();
        login_screen = ls;
    }  
    
    public class jTableAppointments {           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        signOut = new javax.swing.JButton();
        welcomeCons = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblConsult = new javax.swing.JTable();
        updateTable = new javax.swing.JButton();
        prevNotes = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtNotes = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        signOut.setText("Sign Out");
        signOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signOutActionPerformed(evt);
            }
        });

        welcomeCons.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        welcomeCons.setText("Welcome !");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Notes");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Appointments");

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        tblConsult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Appointment ID", "Client ID", "Consultant ID", "Date", "Industry", "Sub.Category", "Options", "Career"
            }
        ));
        tblConsult.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblConsult);

        updateTable.setBackground(new java.awt.Color(204, 255, 204));
        updateTable.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        updateTable.setText("Update");
        updateTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTable(evt);
            }
        });

        prevNotes.setText("Load Notes");
        prevNotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevNotesActionPerformed(evt);
            }
        });

        txtNotes.setColumns(20);
        txtNotes.setRows(5);
        jScrollPane4.setViewportView(txtNotes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(welcomeCons)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 884, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addGap(17, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(prevNotes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                    .addComponent(saveBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateTable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(signOut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signOut)
                    .addComponent(welcomeCons))
                .addGap(27, 27, 27)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateTable, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(prevNotes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void signOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signOutActionPerformed
        // TODO add your handling code here:
        login_screen.setVisible(true);
        this.dispose();
        //TestLogin tLogin = new TestLogin();        
        
        //ConsultantUI.dispose(); UNCOMMENT to Close APP completely, otherwise goes back to login
       
    }//GEN-LAST:event_signOutActionPerformed

    private void updateTable(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTable
        // TODO add your handling code here: This will populate table with appointment db data
        ArrayList<Appointment> appList = FMCdb.getAppointments();
        DefaultTableModel model = (DefaultTableModel) tblConsult.getModel();
        model.setRowCount(0);
		
        for(int i = 0; i < appList.size(); i++){
            Appointment app = FMCdb.getAppointmentById(appList.get(i).getId());
            Object[] o = {appList.get(i).getId(), appList.get(i).getClient_id(),appList.get(i).getConsultant_id(),
                appList.get(i).getDate(), appList.get(i).getIndustry_name(),
                appList.get(i).getSub_cat_name(), appList.get(i).getOptions_name(),
                appList.get(i).getCareer_name()};                  
            model.addRow(o);    
        }               
               
        tblConsult.setModel(model);
              
    }//GEN-LAST:event_updateTable

    private void prevNotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevNotesActionPerformed
        // TODO add your handling code here: this will pull notes for chosen appointment
        int row = tblConsult.getSelectedRow();
        
        if(row != -1 ){
            DefaultTableModel model = (DefaultTableModel) tblConsult.getModel();   
            int app_id = Integer.parseInt(model.getValueAt(row, 0).toString());
        
            Appointment app = FMCdb.getAppointmentById(app_id);
            txtNotes.setText(app.getNotes());
           
        }else{
            System.out.println("No Appointments Have Been Selected!");
        }            
        
    }//GEN-LAST:event_prevNotesActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here: this will save new notes to chosen/current appointment
        int row = tblConsult.getSelectedRow();
        
        if(row != -1){
            DefaultTableModel model = (DefaultTableModel) tblConsult.getModel();
            int app_id = Integer.parseInt(model.getValueAt(row, 0).toString());
            
            Appointment app = FMCdb.getAppointmentById(app_id);
            
            app.setNotes(txtNotes.getText());     // toString() ???       
            FMCdb.updateAppointmentById(app);
            Message.okPopup("Notes saved.");
            txtNotes.setText("");
        } else {
            System.out.println("Error! No Appointment has been selected, Save is not possible.");
        }
        
    }//GEN-LAST:event_saveBtnActionPerformed

           
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultantUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultantUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultantUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultantUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultantUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton prevNotes;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton signOut;
    private javax.swing.JTable tblConsult;
    private javax.swing.JTextArea txtNotes;
    private javax.swing.JButton updateTable;
    private javax.swing.JLabel welcomeCons;
    // End of variables declaration//GEN-END:variables
}
